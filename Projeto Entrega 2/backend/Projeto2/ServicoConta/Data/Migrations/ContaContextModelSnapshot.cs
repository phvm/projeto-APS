// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicoConta.Data;

namespace ServicoConta.Data.Migrations
{
    [DbContext(typeof(ContaContext))]
    partial class ContaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ServicoConta.Entidades.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Conta");
                });

            modelBuilder.Entity("ServicoConta.Entidades.Admin", b =>
                {
                    b.HasBaseType("ServicoConta.Entidades.Conta");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("ServicoConta.Entidades.Cidadao", b =>
                {
                    b.HasBaseType("ServicoConta.Entidades.Conta");

                    b.HasDiscriminator().HasValue("Cidadao");
                });

            modelBuilder.Entity("ServicoConta.Entidades.ProfissionalDeSaude", b =>
                {
                    b.HasBaseType("ServicoConta.Entidades.Conta");

                    b.HasDiscriminator().HasValue("ProfissionalDeSaude");
                });
#pragma warning restore 612, 618
        }
    }
}
